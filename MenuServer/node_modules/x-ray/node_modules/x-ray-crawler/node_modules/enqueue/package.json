{
  "name": "enqueue",
  "version": "1.0.2",
  "description": "queue up function calls",
  "keywords": [
    "queue",
    "simple",
    "tiny",
    "timeout",
    "concurrency"
  ],
  "author": {
    "name": "Matthew Mueller",
    "email": "mattmuelle@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/MatthewMueller/enqueue.git"
  },
  "dependencies": {
    "sliced": "0.0.5"
  },
  "devDependencies": {
    "mocha": "*",
    "superagent": "^1.1.0"
  },
  "main": "index",
  "readme": "\n# enqueue\n\n  seamlessly queue up asynchronous function calls. supports concurrency and timeouts.\n\n## Installation\n\nNode:\n\n```bash\n$ npm install enqueue\n```\n\nBrowser (with [Duo](https://github.com/duojs/duo)):\n\n```js\nvar enqueue = require('matthewmueller/enqueue');\n```\n\n## Example\n\n```js\nvar superagent = require('superagent');\nvar enqueue = require('enqueue');\n\n// execute 2 at a time, with a timeout\nvar options = {\n  concurrency: 2,\n  timeout: 1000,\n  limit: 10\n};\n\nvar fn = enqueue(function(url, done) {\n  superagent.get(url, done);\n}, options);\n\nfn('http://lapwinglabs.com', function(err, res) { /* ... */ })\nfn('http://gittask.com', function(err, res) { /* ... */ })\n\n// delayed until one of the other two come back\nfn('http://mat.io', function(err, res) { /* ... */ })\n```\n\n## API\n\n### `queue = enqueue(fn, [options])`\n\nCreate a queue wrapper for `fn`. `options` include:\n\n- `concurrency` (default: `1`): specify how many jobs you'd like to run at once.\n- `timeout` (default: `false`): specify how long a job stall run before it times out.\n- `limit` (default: `Infinity`): limit how many jobs can be queued up at any given time.\n`queue` will return an `Error` if the limit has been reached.\n\n### `queue(args..., [end])`\n\nPass any number of `args...` into the queue with an optional `end` function.\n\n## Test\n\n```\nnpm install\nmake test\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014 Matthew Mueller &lt;mattmuelle@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/MatthewMueller/enqueue/issues"
  },
  "_id": "enqueue@1.0.2",
  "dist": {
    "shasum": "ded1a4f9eb8ffcda68fb8296121713a8822aaf55"
  },
  "_from": "enqueue@^1.0.2",
  "_resolved": "https://registry.npmjs.org/enqueue/-/enqueue-1.0.2.tgz"
}
